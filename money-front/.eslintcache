[{"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\index.js":"1","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\App.js":"2","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\reportWebVitals.js":"3","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\rootReducer.js":"4","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\MainDrawer.js":"5","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\FloatingMenu.js":"6","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\SignIn.js":"7","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\SignUp.js":"8","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\dateReducer.js":"9","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\stockTradingReducer.js":"10","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\stockPersonalReducer.js":"11","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\moneyReducer.js":"12","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\tagReducer.js":"13","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\signReducer.js":"14","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\SignApi.js":"15","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\MoneyBookTable\\TotalTable.js":"16","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\MoneyBookTable\\StockTable.js":"17","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\MoneyBookTable\\MoneyTable.js":"18","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\StockTradingApi.js":"19","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\StockPersonalApi.js":"20","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\TagApi.js":"21","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\DateApi.js":"22","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\MoneyBookApi.js":"23"},{"size":1306,"mtime":1615815270156,"results":"24","hashOfConfig":"25"},{"size":505,"mtime":1615815062420,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1614146783584,"results":"27","hashOfConfig":"25"},{"size":999,"mtime":1614146783502,"results":"28","hashOfConfig":"25"},{"size":8312,"mtime":1615816210191,"results":"29","hashOfConfig":"25"},{"size":7972,"mtime":1615815108124,"results":"30","hashOfConfig":"25"},{"size":4095,"mtime":1615815276529,"results":"31","hashOfConfig":"25"},{"size":4072,"mtime":1615813354518,"results":"32","hashOfConfig":"25"},{"size":1292,"mtime":1614146783500,"results":"33","hashOfConfig":"25"},{"size":2958,"mtime":1614865197153,"results":"34","hashOfConfig":"25"},{"size":2330,"mtime":1614146783504,"results":"35","hashOfConfig":"25"},{"size":2611,"mtime":1614865197151,"results":"36","hashOfConfig":"25"},{"size":1513,"mtime":1614146783506,"results":"37","hashOfConfig":"25"},{"size":1718,"mtime":1615815275077,"results":"38","hashOfConfig":"25"},{"size":2529,"mtime":1615814834377,"results":"39","hashOfConfig":"25"},{"size":2230,"mtime":1614865197149,"results":"40","hashOfConfig":"25"},{"size":13168,"mtime":1614865197147,"results":"41","hashOfConfig":"25"},{"size":7129,"mtime":1615815153169,"results":"42","hashOfConfig":"25"},{"size":4001,"mtime":1615811030823,"results":"43","hashOfConfig":"25"},{"size":3213,"mtime":1615810980387,"results":"44","hashOfConfig":"25"},{"size":2185,"mtime":1615811066934,"results":"45","hashOfConfig":"25"},{"size":2243,"mtime":1615814187124,"results":"46","hashOfConfig":"25"},{"size":4183,"mtime":1615810978421,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"170am1r",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\index.js",["97"],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\App.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\reportWebVitals.js",[],["98","99"],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\rootReducer.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\MainDrawer.js",["100","101","102","103","104","105"],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\FloatingMenu.js",["106","107","108"],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\SignIn.js",["109","110"],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\SignUp.js",["111","112"],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\dateReducer.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\stockTradingReducer.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\stockPersonalReducer.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\moneyReducer.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\tagReducer.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\module\\signReducer.js",["113","114"],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\SignApi.js",["115"],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\MoneyBookTable\\TotalTable.js",["116","117","118"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteTag, getTag } from '../../module/tagReducer';\r\nimport { Button, IconButton, ListItem, ListItemSecondaryAction, ListItemText, TablePagination } from '@material-ui/core';\r\nimport { getMoneyBookByTag } from '../../api/MoneyBookApi';\r\nimport { getMoneyByTag } from '../../module/moneyReducer';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  table: {\r\n    minWidth: 0,\r\n  },\r\n  closeButton: {  \r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  buttonSize: {\r\n    fontSize: '18px'\r\n  }   \r\n}));\r\n\r\nfunction createData(id, tag) {\r\n  return {id, tag };\r\n}\r\n\r\nconst rows = [\r\n  createData( 1, \"BASIC 1\"),\r\n  createData( 2, \"BASIC 2\"),\r\n  createData( 3, \"BASIC 3\"),\r\n  createData( 4, \"BASIC 4\"),\r\n];\r\n\r\nexport default function TotalTable() {\r\n  const classes = useStyles();\r\n  const { tags } = useSelector(state => state.tagReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {      \r\n    try {\r\n      dispatch(getTag()); \r\n    } catch (error) {\r\n      console.log(error);\r\n    }      \r\n  },[dispatch])\r\n\r\n  const handleClick = (tag) => {\r\n    console.log(tag)\r\n    dispatch(getMoneyByTag(tag));\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteTag(id));\r\n    setTimeout(() => {\r\n      dispatch(getTag());\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        rows.map((row) => (\r\n          <ListItem dense=\"true\" button onClick={() => handleClick(row.tag)}>\r\n            <ListItemText  primary= {row.tag} />\r\n          </ListItem>\r\n        ))\r\n      }\r\n      {\r\n        tags && tags.map((row) => (\r\n          <ListItem dense=\"true\" button onClick={() => handleClick(row.tag)} >      \r\n            <ListItemText  primary= {row.tag} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton  size=\"small\" edge=\"end\" onClick={() => handleDelete(row.id)} > <CloseIcon className={classes.buttonSize} /> </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\MoneyBookTable\\StockTable.js",["119","120","121","122","123","124","125","126","127"],"import React, { useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createTrading, deleteTrading, getStockByTicker, updateTrading } from '../../module/stockTradingReducer';\r\nimport { getStockPersonal } from '../../api/StockPersonalApi';\r\nimport { deletePersonal, getPersonal, updatePersonal } from '../../module/stockPersonalReducer';\r\nimport { TextField } from '@material-ui/core';\r\nimport { updateStockTrading } from '../../api/StockTradingApi';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  table: {\r\n    minWidth: 0,\r\n  },\r\n  textfield: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function StockTable() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [changeOpen, setChangeOpen] = React.useState(false);\r\n  const [data, setData] = React.useState({});\r\n  const [startDate, setStartDate] = React.useState(new Date());\r\n  const [day, setDat] = React.useState(startDate.getDate());\r\n  const [year, setYear] = React.useState(startDate.getFullYear());\r\n  const [month, setMonth] = React.useState(startDate.getMonth() + 1);\r\n  const [stockPersonalData, setStockPersonalData] = React.useState({});\r\n  const [changePersonalOpen, setChangePersonalOpen] = React.useState(false);\r\n  const [changeTradingOpen, setChangeTradingOpen] = React.useState(false);\r\n  const [stockTradingData, setStockTradingData] = React.useState({});\r\n\r\n  const { time } = useSelector(state => state.dateReducer);\r\n  const { tradingdata } = useSelector(state => state.stockTradingReducer);\r\n  const { personaldata } = useSelector(state => state.stockPersonalReducer);\r\n\r\n  useEffect(() => {      \r\n    try {           \r\n      dispatch(getPersonal());      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }      \r\n  },[dispatch])\r\n\r\n  const handleClick = (row) => {\r\n    setOpen(true);    \r\n    setData({\r\n      ...data,\r\n      ticker: row.ticker\r\n    })\r\n    try {\r\n      dispatch(getStockByTicker(row.ticker));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const handleChange = (row) => {\r\n    setData({\r\n      id: row.id,\r\n      day: row.day,\r\n      ticker: row.ticker,\r\n      price: row.price,\r\n      year: year,\r\n      month: month,\r\n      stockquantity: row.stockquantity\r\n    });\r\n    setChangeOpen(true);\r\n  }\r\n\r\n  const handleChageClose = () => {\r\n    setChangeOpen(false);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteTrading(data.id));  \r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(updateTrading(data.id, data));\r\n    setTimeout(() => {\r\n      dispatch(getStockByTicker(data.ticker));\r\n      dispatch(getPersonal()); \r\n    }, 1000); \r\n  }\r\n\r\n  const handleChangePersonalOpen = (data) => {\r\n    setStockPersonalData({\r\n      id: data.id,\r\n      ticker: data.ticker,\r\n      targetquantity: data.targetquantity,\r\n      currentquantity: 0\r\n    });\r\n    setChangePersonalOpen(true);\r\n  }\r\n\r\n  const handleChangePersonalClose = () => {\r\n    setChangePersonalOpen(false);\r\n  }\r\n\r\n  const handlePersonalDelete = (id) => {\r\n    dispatch(deletePersonal(id));\r\n    setTimeout(() => {\r\n      dispatch(getPersonal()); \r\n    }, 1000); \r\n  }\r\n\r\n  const handleUpdatePersonal = () => {\r\n    dispatch(updatePersonal(stockPersonalData.id, stockPersonalData));\r\n    setTimeout(() => {\r\n      dispatch(getPersonal()); \r\n    }, 1000); \r\n  }\r\n\r\n  const handleChangeTradingOpen = () => {\r\n    setData({\r\n      ...data,\r\n      day: day,\r\n      price: 0,\r\n      year: year,\r\n      month: month,\r\n      stockquantity: 0\r\n    });\r\n    setChangeTradingOpen(true);\r\n  }\r\n\r\n  const handleChangeTradingClose = () => {\r\n    setChangeTradingOpen(false);\r\n  }\r\n\r\n  const handleCreateTrading = () => {\r\n    dispatch(createTrading(data));\r\n    setTimeout(() => {\r\n      dispatch(getStockByTicker(data.ticker));\r\n    }, 1000); \r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow >\r\n            <TableCell>티커</TableCell>\r\n            <TableCell>목표 수량</TableCell> \r\n            <TableCell>보유 수량</TableCell>   \r\n            <TableCell></TableCell>               \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {personaldata && personaldata.map((row) => (       \r\n            <TableRow key={row.id} hover  >\r\n              <TableCell component=\"th\" scope=\"row\" onClick={() => handleClick(row)}>\r\n                {row.ticker}\r\n              </TableCell>\r\n              <TableCell onClick={() => handleClick(row)}>{row.targetquantity}</TableCell>\r\n              <TableCell onClick={() => handleClick(row)}>{row.currentquantity}</TableCell>\r\n              <TableCell padding=\"none\" >\r\n                <IconButton onClick={() => handleChangePersonalOpen(row)}> <BorderColorIcon /> </IconButton>\r\n                <IconButton onClick={() => handlePersonalDelete(row.id)}> <CloseIcon /> </IconButton>\r\n              </TableCell>             \r\n            </TableRow>                 \r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"stock_modal\" open={open}>\r\n        <DialogTitle id=\"stock_modal\" onClose={handleClose}>\r\n          거래 내역\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"stock_table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>거래 날짜</TableCell>\r\n                  <TableCell>티커</TableCell> \r\n                  <TableCell>가격</TableCell>  \r\n                  <TableCell>거래량</TableCell>                      \r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {tradingdata && tradingdata.map((row) => (            \r\n                <TableRow key={row.id} hover onClick={() => handleChange(row)}>\r\n                  <TableCell component=\"th\" scope=\"row\">{row.day}</TableCell>\r\n                  <TableCell>{row.ticker}</TableCell>\r\n                  <TableCell>{row.price}</TableCell>\r\n                  <TableCell>{row.stockquantity}</TableCell>                  \r\n                </TableRow>\r\n              ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>        \r\n        </DialogContent>\r\n        <DialogActions>    \r\n          <Button color=\"primary\" onClick={handleChangeTradingOpen}>\r\n            거래 내역 생성\r\n          </Button>  \r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog onClose={handleChageClose} open={changeOpen} >\r\n        <DialogTitle id=\"stock_modal\" onClose={handleChageClose}>\r\n           내역 수정\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form className={classes.textfield} noValidate autoComplete=\"off\">\r\n              <TextField id=\"year\" label=\"년도\" defaultValue={year} variant=\"filled\" type=\"number\" onChange={(e) => {setData({...data, year: e.target.value})}} />\r\n              <TextField id=\"month\" label=\"월\" defaultValue={month} variant=\"filled\" type=\"number\" onChange={(e) => {setData({...data, month: e.target.value})}} />\r\n              <TextField id=\"date\" label=\"날짜\" defaultValue={data.day} variant=\"filled\" type=\"number\" onChange={(e) => {setData({...data, day: e.target.value})}} />\r\n              <TextField id=\"ticker\" label=\"티커\" defaultValue={data.ticker} variant=\"filled\" onChange={(e) => {setData({...data, ticker: e.target.value})}} />\r\n              <TextField id=\"price\" label=\"금액\" defaultValue={data.price} variant=\"filled\" type=\"number\" onChange={(e) => {setData({...data, price: e.target.value})}} />\r\n              <TextField id=\"stockweight\" label=\"수량\" defaultValue={data.stockquantity} variant=\"filled\" onChange={(e) => {setData({...data, stockquantity: e.target.value})}} />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleUpdate()} color=\"primary\">\r\n            수정\r\n          </Button>\r\n          <Button onClick={() => handleDelete()} color=\"secondary\">\r\n            삭제\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog onClose={handleChangePersonalClose} open={changePersonalOpen}>\r\n        <DialogTitle id=\"stock_personal_modal\" onClose={handleChangePersonalClose}>\r\n           관심주 수정\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form className={classes.textfield} noValidate autoComplete=\"off\">\r\n              <TextField id=\"ticker\" label=\"티커\" defaultValue={stockPersonalData.ticker} variant=\"filled\" onChange={(e) => {setStockPersonalData({...stockPersonalData, ticker: e.target.value})}} />\r\n              <TextField id=\"targetquantity\" label=\"목표 수량\" defaultValue={stockPersonalData.targetquantity} variant=\"filled\" type=\"number\" onChange={(e) => {setStockPersonalData({...stockPersonalData, targetquantity: e.target.value})}} />\r\n              <TextField id=\"currentquantity\" label=\"보유 수량(가중치)\" defaultValue=\"0\" variant=\"filled\" type=\"number\" onChange={(e) => {setStockPersonalData({...stockPersonalData, currentquantity: e.target.value})}} />              \r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={() => handleUpdatePersonal()}>\r\n            수정\r\n          </Button>\r\n        </DialogActions>   \r\n      </Dialog>\r\n\r\n      <Dialog onClose={handleChangeTradingClose} open={changeTradingOpen}>\r\n        <DialogTitle id=\"stock_personal_modal\" onClose={handleChangeTradingClose}>\r\n          거래 내역 생성\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form className={classes.textfield} noValidate autoComplete=\"off\">\r\n            <TextField id=\"year\" label=\"년도\" defaultValue={year} variant=\"filled\" type=\"number\" onChange={(e) => {setData({...data, year: e.target.value})}} />\r\n            <TextField id=\"month\" label=\"월\" defaultValue={month} variant=\"filled\" type=\"number\" onChange={(e) => {setData({...data, month: e.target.value})}} />\r\n            <TextField id=\"date\" label=\"날짜\" defaultValue={day} variant=\"filled\" type=\"number\" onChange={(e) => {setData({...data, day: e.target.value})}} />\r\n            <TextField id=\"ticker\" label=\"티커\" defaultValue={data.ticker} variant=\"filled\" onChange={(e) => {setData({...data, ticker: e.target.value})}} />\r\n            <TextField id=\"price\" label=\"금액\" defaultValue={0} variant=\"filled\" type=\"number\" onChange={(e) => {setData({...data, price: e.target.value})}} />\r\n            <TextField id=\"stockweight\" label=\"수량\" defaultValue={0} variant=\"filled\" onChange={(e) => {setData({...data, stockquantity: e.target.value})}} />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={() => handleCreateTrading()}>\r\n            생성\r\n          </Button>\r\n        </DialogActions>   \r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}","C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\components\\MoneyBookTable\\MoneyTable.js",["128","129","130"],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\StockTradingApi.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\StockPersonalApi.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\TagApi.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\DateApi.js",[],"C:\\Users\\JungWoo\\work\\moneyBook\\money-front\\src\\api\\MoneyBookApi.js",[],{"ruleId":"131","severity":1,"message":"132","line":8,"column":26,"nodeType":"133","messageId":"134","endLine":8,"endColumn":37},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"131","severity":1,"message":"139","line":19,"column":8,"nodeType":"133","messageId":"134","endLine":19,"endColumn":17},{"ruleId":"131","severity":1,"message":"140","line":20,"column":8,"nodeType":"133","messageId":"134","endLine":20,"endColumn":16},{"ruleId":"131","severity":1,"message":"141","line":21,"column":8,"nodeType":"133","messageId":"134","endLine":21,"endColumn":16},{"ruleId":"131","severity":1,"message":"142","line":25,"column":49,"nodeType":"133","messageId":"134","endLine":25,"endColumn":54},{"ruleId":"131","severity":1,"message":"143","line":30,"column":24,"nodeType":"133","messageId":"134","endLine":30,"endColumn":35},{"ruleId":"131","severity":1,"message":"144","line":109,"column":13,"nodeType":"133","messageId":"134","endLine":109,"endColumn":21},{"ruleId":"131","severity":1,"message":"145","line":89,"column":10,"nodeType":"133","messageId":"134","endLine":89,"endColumn":19},{"ruleId":"131","severity":1,"message":"146","line":89,"column":21,"nodeType":"133","messageId":"134","endLine":89,"endColumn":33},{"ruleId":"131","severity":1,"message":"147","line":96,"column":11,"nodeType":"133","messageId":"134","endLine":96,"endColumn":23},{"ruleId":"131","severity":1,"message":"148","line":15,"column":10,"nodeType":"133","messageId":"134","endLine":15,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":82,"column":5,"nodeType":"151","endLine":82,"endColumn":15,"suggestions":"152"},{"ruleId":"131","severity":1,"message":"153","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"154","line":16,"column":10,"nodeType":"133","messageId":"134","endLine":16,"endColumn":19},{"ruleId":"131","severity":1,"message":"155","line":36,"column":11,"nodeType":"133","messageId":"134","endLine":36,"endColumn":19},{"ruleId":"131","severity":1,"message":"155","line":41,"column":11,"nodeType":"133","messageId":"134","endLine":41,"endColumn":19},{"ruleId":"131","severity":1,"message":"155","line":44,"column":11,"nodeType":"133","messageId":"134","endLine":44,"endColumn":19},{"ruleId":"131","severity":1,"message":"156","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":16},{"ruleId":"131","severity":1,"message":"157","line":5,"column":79,"nodeType":"133","messageId":"134","endLine":5,"endColumn":94},{"ruleId":"131","severity":1,"message":"158","line":6,"column":10,"nodeType":"133","messageId":"134","endLine":6,"endColumn":27},{"ruleId":"131","severity":1,"message":"159","line":20,"column":10,"nodeType":"133","messageId":"134","endLine":20,"endColumn":26},{"ruleId":"131","severity":1,"message":"160","line":23,"column":10,"nodeType":"133","messageId":"134","endLine":23,"endColumn":28},{"ruleId":"131","severity":1,"message":"146","line":84,"column":21,"nodeType":"133","messageId":"134","endLine":84,"endColumn":33},{"ruleId":"131","severity":1,"message":"161","line":85,"column":15,"nodeType":"133","messageId":"134","endLine":85,"endColumn":21},{"ruleId":"131","severity":1,"message":"162","line":86,"column":16,"nodeType":"133","messageId":"134","endLine":86,"endColumn":23},{"ruleId":"131","severity":1,"message":"163","line":87,"column":17,"nodeType":"133","messageId":"134","endLine":87,"endColumn":25},{"ruleId":"131","severity":1,"message":"164","line":91,"column":10,"nodeType":"133","messageId":"134","endLine":91,"endColumn":26},{"ruleId":"131","severity":1,"message":"165","line":91,"column":28,"nodeType":"133","messageId":"134","endLine":91,"endColumn":47},{"ruleId":"131","severity":1,"message":"166","line":93,"column":11,"nodeType":"133","messageId":"134","endLine":93,"endColumn":15},{"ruleId":"131","severity":1,"message":"146","line":91,"column":21,"nodeType":"133","messageId":"134","endLine":91,"endColumn":33},{"ruleId":"131","severity":1,"message":"162","line":92,"column":16,"nodeType":"133","messageId":"134","endLine":92,"endColumn":23},{"ruleId":"131","severity":1,"message":"163","line":93,"column":17,"nodeType":"133","messageId":"134","endLine":93,"endColumn":25},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'HomeIcon' is defined but never used.","'Table' is defined but never used.","'getDateFunc' is defined but never used.","'username' is assigned a value but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'personaldata' is assigned a value but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.","ArrayExpression",["169"],"'useState' is defined but never used.","'Copyright' is defined but never used.","'response' is assigned a value but never used.","'Button' is defined but never used.","'TablePagination' is defined but never used.","'getMoneyBookByTag' is defined but never used.","'getStockPersonal' is defined but never used.","'updateStockTrading' is defined but never used.","'setDat' is assigned a value but never used.","'setYear' is assigned a value but never used.","'setMonth' is assigned a value but never used.","'stockTradingData' is assigned a value but never used.","'setStockTradingData' is assigned a value but never used.","'time' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},"Update the dependencies array to be: [userName, username]",{"range":"172","text":"173"},[2460,2470],"[userName, username]"]